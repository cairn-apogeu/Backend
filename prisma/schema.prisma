generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model Users {
  user_clerk_id   String       @id
  tipo_perfil     String    @db.VarChar(10)
  discord         String?   @db.VarChar(20)
  linkedin        String?   @db.VarChar(30)
  github          String?   @db.VarChar(30)
  objetivo_curto  String?
  objetivo_medio  String?
  objetivo_longo  String?
  genero            String?   @db.VarChar(10)
  nascimento      DateTime?

  projetosCliente Projetos[] @relation("ProjetosCliente")
  projetosGestor  Projetos[] @relation("ProjetosGestor")
  cards           Cards[]    @relation("CardAssigned")

  AlunosProjetos  AlunosProjetos[]
}

model Projetos {
  id          Int            @id @default(autoincrement())
  id_cliente  String
  id_gestor   String
  nome        String         @db.VarChar(100)
  valor       Int
  status      String         @db.VarChar(50)

  cliente     Users          @relation("ProjetosCliente", fields: [id_cliente], references: [user_clerk_id])
  gestor      Users          @relation("ProjetosGestor", fields: [id_gestor], references: [user_clerk_id])
  sprints     Sprints[]
  AlunosProjetos AlunosProjetos[]

  @@index([id_cliente], map: "fk_projetos_id_cliente")
  @@index([id_gestor], map: "fk_projetos_id_gestor")
}

model AlunosProjetos {
  projeto_id Int
  aluno_id   String

  projeto    Projetos @relation(fields: [projeto_id], references: [id])
  aluno      Users    @relation(fields: [aluno_id], references: [user_clerk_id])

  @@id([projeto_id, aluno_id])
  @@index([projeto_id], map: "fk_alunos_projeto_id")
  @@index([aluno_id], map: "fk_alunos_aluno_id")
}

model Sprints {
  id         Int       @id @default(autoincrement())
  id_projeto Int
  numero     Int

  projeto    Projetos @relation(fields: [id_projeto], references: [id])
  cards      Cards[]

  @@index([id_projeto], map: "fk_sprints_id_projeto")
}

model Cards {
  id               Int        @id @default(autoincrement())
  titulo           String     @db.VarChar(100)
  descricao        String?
  status           String     @db.VarChar(20)
  tempo_estimado   Int?
  tempo            Int?
  assigned         String?
  sprint           Int?
  dod              String[]
  dor              String[]
  xp_frontend      Int?
  xp_backend       Int?
  xp_negocios      Int?
  xp_arquitetura   Int?
  xp_design        Int?
  xp_datalytics    Int?
  indicacao_conteudo String?

  assignedTo       Users?     @relation("CardAssigned", fields: [assigned], references: [user_clerk_id])
  sprintRelation   Sprints?   @relation(fields: [sprint], references: [id])

  @@index([assigned], map: "fk_cards_assigned")
  @@index([sprint], map: "fk_cards_sprint")
}
